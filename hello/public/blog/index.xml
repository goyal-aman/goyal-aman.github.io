<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on Aman Goyal</title>
    <link>http://localhost:1313/blog/</link>
    <description>Recent content in Blog on Aman Goyal</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <copyright>Copyright Â© 2025, Aman Goyal.</copyright>
    <lastBuildDate>Wed, 26 Mar 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DocumentDB Load Balancing: A Key Learning from Our Load Testing</title>
      <link>http://localhost:1313/documentdb-load-balancing-a-key-learning-from-our-load-testing/</link>
      <pubDate>Wed, 26 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/documentdb-load-balancing-a-key-learning-from-our-load-testing/</guid>
      <description>TL;DR Amazon DocumentDB load-balances traffic at the TCP connection level rather than at the request level. This can lead to unexpected resource distribution issues, particularly when scaling read replicas under high load. The solution? Restarting application pods to establish new TCP connections that are evenly distributed across replicas.&#xA;Understanding the Load Balancing Issue In a typical Amazon DocumentDB cluster, there is a primary node that handles all write operations and one or more read replicas to distribute read traffic.</description>
    </item>
    <item>
      <title>Distributed Locks - Naive</title>
      <link>http://localhost:1313/distributed-locks-naive/</link>
      <pubDate>Mon, 30 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/distributed-locks-naive/</guid>
      <description>Locks are used by processes to acquire exclusive access to resource which are shared among many processes. Exclusive access is required to prevent race conditions which hard debug and nightmare to detect.&#xA;Imagine scenario of an admin is updating an email group by uploading a file. The process works like this:&#xA;All existing users in the group are removed. New users listed in the file are added in batches (e.</description>
    </item>
  </channel>
</rss>
