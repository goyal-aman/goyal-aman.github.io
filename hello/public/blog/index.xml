<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on Aman Goyal</title>
    <link>http://localhost:1313/blog/</link>
    <description>Recent content in Blog on Aman Goyal</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <copyright>Copyright © 2025, Aman Goyal.</copyright>
    <lastBuildDate>Wed, 26 Mar 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DocumentDB Load Balancing: A Key Learning from Our Load Testing</title>
      <link>http://localhost:1313/documentdb-load-balancing-a-key-learning-from-our-load-testing/</link>
      <pubDate>Wed, 26 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/documentdb-load-balancing-a-key-learning-from-our-load-testing/</guid>
      <description>TLDR; API Gateway can provide caching, logging auth and load balancer distributes traffic between 2 or more servers for high-availability and horizontal scaling.&#xA;Both load balancer and Api gateways are used between web clients and web servers. But they have served different purpose, that is to say, they are not interchangeable.&#xA;Load Balancers Core function of load balancer is to distribute traffic. They receive traffic from web client’s and distribute them between 2 or more web servers.</description>
    </item>
    <item>
      <title>Distributed Locks - Naive</title>
      <link>http://localhost:1313/distributed-locks-naive/</link>
      <pubDate>Mon, 30 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/distributed-locks-naive/</guid>
      <description>Locks are used by processes to acquire exclusive access to resource which are shared among many processes. Exclusive access is required to prevent race conditions which hard debug and nightmare to detect.&#xA;Imagine scenario of an admin is updating an email group by uploading a file. The process works like this:&#xA;All existing users in the group are removed. New users listed in the file are added in batches (e.</description>
    </item>
    <item>
      <title>Understanding OLAP and OLTP</title>
      <link>http://localhost:1313/understanding-olap-and-oltp/</link>
      <pubDate>Mon, 23 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/understanding-olap-and-oltp/</guid>
      <description>TLDR; Any database falls into one of two category OLAP or OLTP — depending on the access pattern for which it is optimised&#xA;Key differences: OLAP vs. OLTP The primary purpose of online analytical processing (OLAP) is to analyse aggregated data, while the primary purpose of online transaction processing (OLTP) is to process database transactions.&#xA;You use OLAP systems to generate reports, perform complex data analysis, and identify trends. In contrast, you use OLTP systems to process orders, update inventory, and manage customer accounts.</description>
    </item>
    <item>
      <title>Load Balancer vs. API Gateway: Understanding the Differences</title>
      <link>http://localhost:1313/load-balancer-vs.-api-gateway-understanding-the-differences/</link>
      <pubDate>Mon, 16 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/load-balancer-vs.-api-gateway-understanding-the-differences/</guid>
      <description>TLDR; API Gateway can provide caching, logging auth and load balancer distributes traffic between 2 or more servers for high-availability and horizontal scaling.&#xA;Both load balancer and Api gateways are used between web clients and web servers. But they have served different purpose, that is to say, they are not interchangeable.&#xA;Load Balancers Core function of load balancer is to distribute traffic. They receive traffic from web client’s and distribute them between 2 or more web servers.</description>
    </item>
    <item>
      <title>Storing Values within Index</title>
      <link>http://localhost:1313/storing-values-within-index/</link>
      <pubDate>Mon, 09 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/storing-values-within-index/</guid>
      <description>Relational databases can have one primary index and any number of secondary indexes. When queries uses indexes they use keys in the index to find values. There are two ways to have values&#xA;Store actual row in index Store reference to rows in index Storing references to rows in index is a good when there are any secondary indexes. In this way when a value needs to be updated in row, it can be updated in one place and all the indexes can refer to that one value.</description>
    </item>
    <item>
      <title>Databases: Memory and Disks</title>
      <link>http://localhost:1313/databases-memory-and-disks/</link>
      <pubDate>Mon, 02 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/databases-memory-and-disks/</guid>
      <description>Most databases rely on disks and SSD’s to store both data and data structures like table, rows, indexes. There are primarily two reasons for this: disk’s and SSD’s are persistent (or durable) that means data is not lost in case of power loss and they are much cheaper than ram for per Gb cost. Relying on persistent storage devices though comes with challenges. Data in memory needs to be encoded into certain format before it can be written on to them which is slow and CPU intensive.</description>
    </item>
  </channel>
</rss>
